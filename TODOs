Correctness:
- Allow for matrix casting

Performances:
15 february:
-14:43: initial version  => 11,16 sec (10cb14c46c0474eeee598f1802ac5b6d875f457c)
-14:45: The materialization is done less times, but I have to use shared pointers. => 11.026 sec (b0806e82cb06475bcf6b48cbaf1281dda428f2de)
16 February
-16:54: removed all virtual calls from optimizableMatrixData.get() => 1.88 sec

18 february
-10:26: not calling optimize on children of Concatenate matrix => 1.5 sec (16b959d3e56b27ad5f59f02160fb540968a99293)
-11:55: using std::async => 1.2 sec (91dcef68a65a3c702b8a74f44456edc6e58d2c9d)
-12:47: using -O3. Not comparable to the results above, but further benchmarks will be more indicative or real world performances => 0.09 sec (0812e089a8a796f76dfd6b98d6bf66ec5e486ddf)

20 february
-18:01: Base new test => 0.475 sec
-18:05: Calling optimize before get() for every MatrixData => 0.400 sec
-20:30: New test => 3.06 sec

22 February
-14:57: Using laptop, test took => 5.14 sec
-15:06: Vectors are freed when not needed anymore. Slower, but needs less memory => 5.48 sec
-15:44 BaseMultiplication caches pointers to left and right => 5.30 sec